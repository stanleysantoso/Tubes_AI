import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.Scanner;

/**
 * Created by Stanley on 12/1/2015.
 */
public class NBViewer extends JFrame {
    private JPanel modelPanel;
    private JTable modelTable;
    private JScrollPane tableContainer;
    private JButton exportModelButton;
    private String resourcePath = this.getClass().getResource("data").getPath() + "/";

    public NBViewer() {
        super("Naive Bayes Model");
        final FileNameExtensionFilter filter = new FileNameExtensionFilter("Text File (model)", "model", "text");
        DefaultTableModel tableModel = null;
        String[] columnNames;
        Scanner scnr = null;
        try {
            File modelFile = new File(resourcePath + "NB.model");
            scnr = new Scanner(modelFile);
        } catch (FileNotFoundException e) {
            System.out.println("File not found !");
        }
        do {
            String line = scnr.nextLine();
            if (line.contains("@attributes")) {
                columnNames = line.split(";");
                tableModel = new DefaultTableModel(columnNames, 0);
            } else {
                tableModel.addRow(line.split(";"));
            }
        } while (scnr.hasNext());
        exportModelButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFileChooser fc = new JFileChooser();
                fc.setFileFilter(filter);
                fc.showSaveDialog(modelPanel);
                String output = fc.getSelectedFile().getAbsolutePath();
                if (!output.contains(".model")) {
                    output += ".model";
                }
                Export(output);
            }
        });

        modelTable.setModel(tableModel);

        setContentPane(modelPanel);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        pack();
        setVisible(true);
    }


    public void Export(String path) {
        File file = new File(resourcePath + "NB.model");
        Scanner scanner = null;
        Writer writer = null;
        try {
            scanner = new Scanner(file);
            writer = new BufferedWriter(new OutputStreamWriter(
                    new FileOutputStream(path), "utf-8"));
            String line = null;
            do {
                line = scanner.nextLine();
                writer.write(line + "\n");
            } while (scanner.hasNext());

        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                writer.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        modelPanel = new JPanel();
        modelPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Naive Bayes Model");
        modelPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        modelPanel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        tableContainer = new JScrollPane();
        modelPanel.add(tableContainer, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        modelTable = new JTable();
        tableContainer.setViewportView(modelTable);
        exportModelButton = new JButton();
        exportModelButton.setText("Export Model");
        modelPanel.add(exportModelButton, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return modelPanel;
    }
}
